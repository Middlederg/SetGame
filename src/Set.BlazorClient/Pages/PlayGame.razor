@page "/"

@inject NavigationManager navigationManager
@inject Set.BlazorClient.Services.GameService gameService

<div class="container mx-auto md:px-5 lg:px-20">

    <div class="flex justify-between items-center mt-3 lg:my-3 xl:my-6">
        <span class="mx-4 text-teal-700 font-semibold border-teal-300 uppercase text-sm lg:text-xl xl:text-4xl">Find sets</span>

        <TimerAlarm TimesUp="ShowTimesUpAlert" Time="currentTime"></TimerAlarm>

    </div>

    @if (!string.IsNullOrWhiteSpace(gameResultMessage))
    {
        <div class="bg-teal-200 border-l-4 border-teal-700 text-teal-900 text-sm p-4 my-4" role="alert">
            <p class="font-bold">@gameResultMessage</p>
            <p>Score: @game.Players.First().Score.Points()</p>
        </div>
    }
    else
    {
        <Board Game="game" OnSetDiscovered="AddSetToList" OnLevelCompleted="LevelCompleted"></Board>
    }

    <div class="m-4">
        <h3 class="mb-1 text-teal-700 font-semibold border-teal-300 uppercase text-sm lg:text-lg xl:text-2xl ">
            Discovered sets
        </h3>

        @foreach (var row in rows)
        {
            <SetRow Row="row"></SetRow>
        }
    </div>

</div>


@code {

    private string gameResultMessage;

    private Set.Core.Time currentTime;
    private Set.Core.Game game;
    private List<SetRowViewModel> rows;

    protected override void OnInitialized()
    {
        var options = new Set.Core.GameOptions(Set.Core.GameOptions.DefaultMinCardNumber, Set.Core.GameModeFactory.Tutorial, "Mike");
        currentTime = new Core.Time();
        var logger = new Set.Core.MessengerLogger();
        game = new Set.Core.Game(options, logger);
        game.StartGame();
        rows = new List<SetRowViewModel>();
        gameResultMessage = null;
    }

    private void ShowTimesUpAlert()
    {
        gameResultMessage = @"Time's up!";
    }

    private void LevelCompleted()
    {
        gameResultMessage = @"Level completed!";
    }

    private void AddSetToList(Set.Core.CardTrio trio)
    {
        rows.Add(new SetRowViewModel(rows.Count() + 1, trio, trio.ToString(), currentTime.TimeSpan));
    }

    private void GoToGameSummary()
    {
        gameService.SetCurrentGame(game);
        navigationManager.NavigateTo("GameSummary");
    }
}
